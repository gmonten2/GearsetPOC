<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Sends email to admin with description of the error</description>
        <name>ERROR</name>
        <label>ERROR</label>
        <locationX>423</locationX>
        <locationY>1140</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <stringValue>gmonten2@mdc.edu</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>ERROR with Case_RTF Create Case when new Conversation is Created Flow</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <description>We check if there is already an existing case attached to this conversation. If there is, it means that there&#39;s already a case that has been created before.</description>
        <name>Check_if_Existing_Case_TRUE_FALSE</name>
        <label>Check if Existing Case TRUE/FALSE</label>
        <locationX>720</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Existing Case TRUE</defaultConnectorLabel>
        <rules>
            <name>Existing_Case_FALSE</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Existing_Case</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Last_Incoming_SMS</targetReference>
            </connector>
            <label>Existing Case FALSE</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if last message from student = STOP</description>
        <name>Check_if_Last_Message_STOP</name>
        <label>Check if Last Message = STOP</label>
        <locationX>225</locationX>
        <locationY>600</locationY>
        <defaultConnector>
            <targetReference>Get_Last_Outgoing_SMS</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>STOP</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Last_Incoming_SMS.simplesms__Message__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>stop</stringValue>
                </rightValue>
            </conditions>
            <label>STOP</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if there&#39;s an Attendee record related to the SMS, or if there&#39;s a Contact record related to the SMS.</description>
        <name>Check_if_SMS_is_related_to_Attendee_or_Contact</name>
        <label>Check if SMS is related to Attendee or Contact</label>
        <locationX>555</locationX>
        <locationY>816</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Attendee</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Last_Incoming_SMS.Attendee__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Last_Incoming_SMS.Attendee__r.Event_Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Orientation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Record_Type_for_Info_Center_tickets</targetReference>
            </connector>
            <label>Attendee</label>
        </rules>
        <rules>
            <name>Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Last_Incoming_SMS.simplesms__Contact__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Contact</label>
        </rules>
    </decisions>
    <description>v2: added Related Event, Description, Record Type, Subject
v3: added Related Attendee, ContactID, related Case to Conversation
v4: added Related Conversation
v5: fixed error with last outgoing SMS
v6: added branch for STOP messages
v7: added fault message error on Create Records
v8: edited Trigger conditions + edited Case subject/description for new case
v9: added Case Origin = SMS in Create Case Element.
v10: fixed Related Event on Create Record
v11: Fixed Check for existing case
v12: Edited scheduled path to run 1 minute after conversation is created</description>
    <environments>Default</environments>
    <formulas>
        <description>The subject of the Case being created</description>
        <name>forT_EventNameAndMDID</name>
        <dataType>String</dataType>
        <expression>&quot;RE: &quot;&amp; {!Get_Last_Incoming_SMS.Attendee__r.conference360__Event__r.Name} &amp; &quot;- &quot; &amp; {!Get_Last_Incoming_SMS.Attendee__r.MDID__c}</expression>
    </formulas>
    <formulas>
        <description>Concat of last Outgoing &amp; Incoming Messages</description>
        <name>forT_MessageOutgoingAndIncoming</name>
        <dataType>String</dataType>
        <expression>&quot;MDC: &quot; &amp; {!Get_Last_Outgoing_SMS.simplesms__Message__c}  &amp; &quot; - &quot; &amp; {!Get_Last_Incoming_SMS.Attendee__r.conference360__First_Name2__c} &amp;
&quot;: &quot; &amp; {!Get_Last_Incoming_SMS.simplesms__Message__c}</expression>
    </formulas>
    <interviewLabel>Case_RTF {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case_RTF Create Case when new Conversation is created</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_new_Case</name>
        <label>Create new Case</label>
        <locationX>159</locationX>
        <locationY>1032</locationY>
        <connector>
            <targetReference>Relate_Case_to_Conversation_Record</targetReference>
        </connector>
        <faultConnector>
            <targetReference>ERROR</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>Get_Last_Incoming_SMS.Attendee__r.conference360__Contact__r.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>forT_MessageOutgoingAndIncoming</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Origin</field>
            <value>
                <stringValue>SMS</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Case_Record_Type_for_Info_Center_tickets.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Related_Attendee__c</field>
            <value>
                <elementReference>Get_Last_Incoming_SMS.Attendee__r.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Related_Conversation__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Related_Event__c</field>
            <value>
                <elementReference>Get_Last_Incoming_SMS.Attendee__r.conference360__Event__r.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>forT_EventNameAndMDID</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Getting the Info Center ticket record type to be used when creating the Case</description>
        <name>Get_Case_Record_Type_for_Info_Center_tickets</name>
        <label>Get Case Record Type for Info Center tickets</label>
        <locationX>159</locationX>
        <locationY>924</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_new_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Info_Center_Ticket</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>We check if there is already an existing Case created for this Conversation. If so, the Flow stops and does not create a new case for this Conversation.</description>
        <name>Get_Existing_Case</name>
        <label>Get Existing Case</label>
        <locationX>720</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Existing_Case_TRUE_FALSE</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Related_Conversation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>We are getting the SMS response that we received from a student</description>
        <name>Get_Last_Incoming_SMS</name>
        <label>Get Last Incoming SMS</label>
        <locationX>225</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Last_Message_STOP</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>simplesms__Conversation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>simplesms__Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incoming</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>simplesms__SMS_Message__c</object>
        <sortField>simplesms__Message_Date__c</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>We are getting the SMS we sent that the student responded to.</description>
        <name>Get_Last_Outgoing_SMS</name>
        <label>Get Last Outgoing SMS</label>
        <locationX>555</locationX>
        <locationY>708</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_SMS_is_related_to_Attendee_or_Contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>simplesms__Conversation__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>simplesms__Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Outgoing</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>simplesms__SMS_Message__c</object>
        <sortField>simplesms__Message_Date__c</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Relate the case Id to the Conversation record</description>
        <name>Relate_Case_to_Conversation_Record</name>
        <label>Relate Case to Conversation Record</label>
        <locationX>159</locationX>
        <locationY>1140</locationY>
        <inputAssignments>
            <field>simplesms__Case__c</field>
            <value>
                <elementReference>Create_new_Case</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <object>simplesms__Conversation__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <scheduledPaths>
            <name>Scheduled_Path_1</name>
            <connector>
                <targetReference>Get_Existing_Case</targetReference>
            </connector>
            <label>Scheduled Path 1</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>

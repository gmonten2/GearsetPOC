<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <description>Decision element used to auto-assign Case Owner to Queue depending on Campus field selected on a new Case</description>
        <name>Assign_to_Queue_per_Campus</name>
        <label>Assign to Queue per Campus</label>
        <locationX>1106</locationX>
        <locationY>503</locationY>
        <defaultConnector>
            <targetReference>Get_General_Queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>District/Other</defaultConnectorLabel>
        <rules>
            <name>Kendall_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Campus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Kendall</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Kendall_Queue</targetReference>
            </connector>
            <label>Kendall Queue</label>
        </rules>
        <rules>
            <name>Padron_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Campus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Padron</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Padron_Queue</targetReference>
            </connector>
            <label>Padron Queue</label>
        </rules>
        <rules>
            <name>Wolfson_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Campus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Wolfson</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Wolfson_Queue</targetReference>
            </connector>
            <label>Wolfson Queue</label>
        </rules>
        <rules>
            <name>Hialeah_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Campus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hialeah</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Hialeah_Queue</targetReference>
            </connector>
            <label>Hialeah Queue</label>
        </rules>
        <rules>
            <name>North_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Campus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>North/Meek</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_North_Queue</targetReference>
            </connector>
            <label>North Queue</label>
        </rules>
        <rules>
            <name>West_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Campus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>West</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_West_Queue</targetReference>
            </connector>
            <label>West Queue</label>
        </rules>
        <rules>
            <name>Medical_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Campus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Medical</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Medical_Queue</targetReference>
            </connector>
            <label>Medical Queue</label>
        </rules>
        <rules>
            <name>Homestead_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Campus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Homestead</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Homestead_Queue</targetReference>
            </connector>
            <label>Homestead Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Case_Record_Type</name>
        <label>Check Case Record Type</label>
        <locationX>1766</locationX>
        <locationY>395</locationY>
        <defaultConnectorLabel>Info Center Ticket</defaultConnectorLabel>
        <rules>
            <name>General_Ticket</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>General Ticket</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_Queue_per_Campus</targetReference>
            </connector>
            <label>General Ticket</label>
        </rules>
    </decisions>
    <description>Flow gets triggered whenever a case gets created. It assigns the Case owner of said new case to a specific Campus Queue depending on the Campus Picklist value selected when creating a new case.
v2: Fixed assignment for Wolfson
v3: Added Record Type decision</description>
    <environments>Default</environments>
    <interviewLabel>Case_RTF Update Case Owner to Queue {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case_RTF Update Case Owner to Queue</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Case_Record_Types</name>
        <label>Get Case Record Types</label>
        <locationX>1766</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Case_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>RecordType</object>
        <sortField>DeveloperName</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch General Queue</description>
        <name>Get_General_Queue</name>
        <label>Get General Queue</label>
        <locationX>2162</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_General_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>General</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch Hialeah Queue</description>
        <name>Get_Hialeah_Queue</name>
        <label>Get Hialeah Queue</label>
        <locationX>842</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_Hialeah_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Hialeah_Campus</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch Homestead Queue</description>
        <name>Get_Homestead_Queue</name>
        <label>Get Homestead Queue</label>
        <locationX>1898</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_Homestead_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Homestead_Campus</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch Kendall Queue</description>
        <name>Get_Kendall_Queue</name>
        <label>Get Kendall Queue</label>
        <locationX>50</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_Kendall_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Kendall_Campus</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch Medical Queue</description>
        <name>Get_Medical_Queue</name>
        <label>Get Medical Queue</label>
        <locationX>1634</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_Medical_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Medical_Campus</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch North Queue</description>
        <name>Get_North_Queue</name>
        <label>Get North Queue</label>
        <locationX>1106</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_North_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>North_Campus</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch Padron Queue</description>
        <name>Get_Padron_Queue</name>
        <label>Get Padron Queue</label>
        <locationX>314</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_Padron_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Padron_Campus</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch West Queue</description>
        <name>Get_West_Queue</name>
        <label>Get West Queue</label>
        <locationX>1370</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_West_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>West_Campus</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Fetch Padron Queue</description>
        <name>Get_Wolfson_Queue</name>
        <label>Get Wolfson Queue</label>
        <locationX>578</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Change_Owner_to_Wolfson_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Wolfson_Campus</stringValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Assign Case Owner to General Queue</description>
        <name>Change_Owner_to_General_Queue</name>
        <label>Change Owner to General Queue</label>
        <locationX>2162</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_General_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Assign Case Owner to Hialeah Queue</description>
        <name>Change_Owner_to_Hialeah_Queue</name>
        <label>Change Owner to Hialeah Queue</label>
        <locationX>842</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Hialeah_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Assign Case Owner to Homestead Queue</description>
        <name>Change_Owner_to_Homestead_Queue</name>
        <label>Change Owner to Homestead Queue</label>
        <locationX>1898</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Homestead_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Assigns Case Owner as Kendall Queue</description>
        <name>Change_Owner_to_Kendall_Queue</name>
        <label>Change Owner to Kendall Queue</label>
        <locationX>50</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Kendall_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Assign Case Owner to Medical Queue</description>
        <name>Change_Owner_to_Medical_Queue</name>
        <label>Change Owner to Medical Queue</label>
        <locationX>1634</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Medical_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Assign Case Owner to North Queue</description>
        <name>Change_Owner_to_North_Queue</name>
        <label>Change Owner to North Queue</label>
        <locationX>1106</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_North_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Assign Case Owner to Padron Queue</description>
        <name>Change_Owner_to_Padron_Queue</name>
        <label>Change Owner to Padron Queue</label>
        <locationX>314</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Padron_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Assign Case Owner to West Queue</description>
        <name>Change_Owner_to_West_Queue</name>
        <label>Change Owner to West Queue</label>
        <locationX>1370</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_West_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Assign Case Owner to Wolfson Queue</description>
        <name>Change_Owner_to_Wolfson_Queue</name>
        <label>Change Owner to Wolfson Queue</label>
        <locationX>578</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Wolfson_Queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>1640</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case_Record_Types</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
